var N=null,E="",T="t",U="u",searchIndex={};
var R=["cfg_if","result","error","usize","initializer","string","by_ref","Creates a \"by reference\" adaptor for this instance of…","shim::io","repeat","An error returned when an operation could not be completed…","read_vectored","shim::io::prelude","Like `read`, except that it reads into a slice of buffers.","Determines if this `Read`er can work with buffers of…","read_to_end","Read all bytes until EOF in this source, placing them into…","read_to_string","Read all bytes until EOF in this source, appending them to…","read_exact","Read the exact number of bytes required to fill `buf`.","Transforms this `Read` instance to an [`Iterator`] over…","Creates an adaptor which will chain this stream with…","Creates an adaptor which will read at most `limit` bytes…","read_until","Read all bytes into `buf` until the delimiter `byte` or…","read_line","Read all bytes until a newline (the 0xA byte) is reached,…","Returns an iterator over the contents of this reader split…","Returns an iterator over the lines of this reader.","stream_len","Returns the length of this stream (in bytes).","stream_position","Returns the current seek position from the start of the…","write_vectored","Like `write`, except that it writes from a slice of buffers.","write_all","Attempts to write an entire buffer into this writer.","write_fmt","Writes a formatted string into this writer, returning any…","arguments","try_from","try_into","borrow_mut","type_id","borrow","typeid","into_iter","to_string","to_owned","clone_into","formatter","fill_buf","consume","seekfrom","errorkind","as_raw_fd","ordering","description","option","into_inner","get_ref","get_mut","linewriter","intoinnererror","with_capacity","bufwriter","Gets a reference to the underlying writer.","Gets a mutable reference to the underlying writer.","bufreader","Gets a reference to the underlying reader.","Gets a mutable reference to the underlying reader.","Returns a reference to the internally buffered data.","SeekFrom","ErrorKind","IoSliceMut","Initializer","StderrLock","IntoInnerError","LineWriter","StdoutLock","BufWriter","StdinLock","BufReader","Transmits `data` to the receiver `to` using the XMODEM…","Receives `data` from `from` using the XMODEM protocol and…","progressfn","Returns a new `Xmodem` instance with the internal…","Flush this output stream, ensuring that all intermediately…","Progress"];
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,R[0],R[0],"The main macro provided by this crate. See crate…",N,N]],"p":[]};
searchIndex["shim"]={"doc":E,"i":[[0,"io","shim","Traits, helpers, and type definitions for core I/O…",N,N],[0,"prelude",R[8],"The I/O Prelude",N,N],[8,"Read",R[12],"The `Read` trait allows for reading bytes from a source.",N,N],[10,"read",E,"Pull some bytes from this source into the specified…",0,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,R[13],0,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,R[14],0,[[["self"]],[R[4]]]],[11,R[15],E,R[16],0,[[["self"],["vec"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[17],E,R[18],0,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[19],E,R[20],0,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[6],E,R[7],0,[[["self"]],["self"]]],[11,"bytes",E,R[21],0,[[],["bytes"]]],[11,"chain",E,R[22],0,[[["r"]],["chain"]]],[11,"take",E,R[23],0,[[["u64"]],["take"]]],[8,"BufRead",E,"A `BufRead` is a type of `Read`er which has an internal…",N,N],[10,R[52],E,"Returns the contents of the internal buffer, filling it…",1,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[10,R[53],E,"Tells this buffer that `amt` bytes have been consumed from…",1,[[["self"],[R[3]]]]],[11,R[24],E,R[25],1,[[["self"],["vec"],["u8"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[26],E,R[27],1,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"split",E,R[28],1,[[["u8"]],["split"]]],[11,"lines",E,R[29],1,[[],["lines"]]],[8,"Seek",E,"The `Seek` trait provides a cursor which can be moved…",N,N],[10,"seek",E,"Seek to an offset, in bytes, in a stream.",2,[[["self"],[R[54]]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[30],E,R[31],2,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[32],E,R[33],2,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[8,"Write",E,"A trait for objects which are byte-oriented sinks.",N,N],[10,"write",E,"Write a buffer into this writer, returning how many bytes…",3,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,R[35],3,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[10,"flush",E,R[88],3,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[36],E,R[37],3,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[38],E,R[39],3,[[["self"],[R[40]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[6],E,R[7],3,[[["self"]],["self"]]],[3,R[75],R[8],"A buffer type used with `Read::read_vectored`.",N,N],[3,"IoSlice",E,"A buffer type used with `Write::write_vectored`.",N,N],[3,R[76],E,"A type used to conditionally initialize buffers passed to…",N,N],[4,R[73],E,"Enumeration of possible methods to seek within an I/O…",N,N],[13,"Start",E,"Sets the offset to the provided number of bytes.",4,N],[13,"End",E,"Sets the offset to the size of this object plus the…",4,N],[13,"Current",E,"Sets the offset to the current position plus the specified…",4,N],[3,"Chain",E,"Adaptor to chain together two readers.",N,N],[3,"Take",E,"Reader adaptor which limits the bytes read from an…",N,N],[3,"Bytes",E,"An iterator over `u8` values of a reader.",N,N],[3,"Split",E,"An iterator over the contents of an instance of `BufRead`…",N,N],[3,"Lines",E,"An iterator over the lines of an instance of `BufRead`.",N,N],[3,"Stdout",E,"A handle to the global standard output stream of the…",N,N],[3,"Empty",E,"A reader which is always at EOF.",N,N],[6,"Result",E,"A specialized `Result` type for I/O operations.",N,N],[3,R[77],E,"A locked reference to the `Stderr` handle.",N,N],[3,"Error",E,"The error type for I/O operations of the [`Read`],…",N,N],[3,"Sink",E,"A writer which will move data into the void.",N,N],[5,"sink",E,"Creates an instance of a writer which will successfully…",N,[[],["sink"]]],[3,"Stdin",E,"A handle to the standard input stream of a process.",N,N],[3,R[78],E,"An error returned by `into_inner` which combines an error…",N,N],[3,"Repeat",E,"A reader which yields one byte over and over and over and…",N,N],[3,R[79],E,"Wraps a writer and buffers output to it, flushing whenever…",N,N],[3,R[80],E,"A locked reference to the `Stdout` handle.",N,N],[3,"Stderr",E,"A handle to the standard error stream of a process.",N,N],[5,"stdin",E,"Constructs a new handle to the standard input of the…",N,[[],["stdin"]]],[3,R[81],E,"Wraps a writer and buffers its output.",N,N],[3,"Cursor",E,"A `Cursor` wraps an in-memory buffer and provides it with…",N,N],[5,R[9],E,"Creates an instance of a reader that infinitely repeats…",N,[[["u8"]],[R[9]]]],[3,R[82],E,"A locked reference to the `Stdin` handle.",N,N],[4,R[74],E,"A list specifying general categories of I/O error.",N,N],[13,"NotFound",E,"An entity was not found, often a file.",5,N],[13,"PermissionDenied",E,"The operation lacked the necessary privileges to complete.",5,N],[13,"ConnectionRefused",E,"The connection was refused by the remote server.",5,N],[13,"ConnectionReset",E,"The connection was reset by the remote server.",5,N],[13,"ConnectionAborted",E,"The connection was aborted (terminated) by the remote…",5,N],[13,"NotConnected",E,"The network operation failed because it was not connected…",5,N],[13,"AddrInUse",E,"A socket address could not be bound because the address is…",5,N],[13,"AddrNotAvailable",E,"A nonexistent interface was requested or the requested…",5,N],[13,"BrokenPipe",E,"The operation failed because a pipe was closed.",5,N],[13,"AlreadyExists",E,"An entity already exists, often a file.",5,N],[13,"WouldBlock",E,"The operation needs to block to complete, but the blocking…",5,N],[13,"InvalidInput",E,"A parameter was incorrect.",5,N],[13,"InvalidData",E,"Data not valid for the operation were encountered.",5,N],[13,"TimedOut",E,"The I/O operation's timeout expired, causing it to be…",5,N],[13,"WriteZero",E,R[10],5,N],[13,"Interrupted",E,"This operation was interrupted.",5,N],[13,"Other",E,"Any I/O error not part of this list.",5,N],[13,"UnexpectedEof",E,R[10],5,N],[5,"copy",E,"Copies the entire contents of a reader into a writer.",N,[[["r"],["w"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[5,"empty",E,"Constructs a new handle to an empty reader.",N,[[],["empty"]]],[3,R[83],E,"The `BufReader` struct adds buffering to any reader.",N,N],[5,"stdout",E,"Constructs a new handle to the standard output of the…",N,[[],["stdout"]]],[5,"stderr",E,"Constructs a new handle to the standard error of the…",N,[[],["stderr"]]],[11,R[11],R[12],R[13],0,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,R[14],0,[[["self"]],[R[4]]]],[11,R[15],E,R[16],0,[[["self"],["vec"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[17],E,R[18],0,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[19],E,R[20],0,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[6],E,R[7],0,[[["self"]],["self"]]],[11,"bytes",E,R[21],0,[[],["bytes"]]],[11,"chain",E,R[22],0,[[["r"]],["chain"]]],[11,"take",E,R[23],0,[[["u64"]],["take"]]],[11,R[24],E,R[25],1,[[["self"],["vec"],["u8"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[26],E,R[27],1,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"split",E,R[28],1,[[["u8"]],["split"]]],[11,"lines",E,R[29],1,[[],["lines"]]],[11,R[30],E,R[31],2,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[32],E,R[33],2,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[34],E,R[35],3,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[36],E,R[37],3,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[38],E,R[39],3,[[["self"],[R[40]]],[[R[2]],[R[1],[R[2]]]]]],[11,R[6],E,R[7],3,[[["self"]],["self"]]],[0,"macros","shim",E,N,N],[14,"const_assert",E,E,N,N],[14,"const_assert_eq",E,E,N,N],[14,"const_assert_size",E,E,N,N],[14,"newioerr",E,E,N,N],[14,"ioerr",E,E,N,N],[11,"from",R[8],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[41],E,E,6,[[[U]],[R[1]]]],[11,R[42],E,E,6,[[],[R[1]]]],[11,R[43],E,E,6,[[["self"]],[T]]],[11,R[45],E,E,6,[[["self"]],[T]]],[11,R[44],E,E,6,[[["self"]],[R[46]]]],[11,"from",E,E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[41],E,E,7,[[[U]],[R[1]]]],[11,R[42],E,E,7,[[],[R[1]]]],[11,R[43],E,E,7,[[["self"]],[T]]],[11,R[45],E,E,7,[[["self"]],[T]]],[11,R[44],E,E,7,[[["self"]],[R[46]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,"into",E,E,8,[[],[U]]],[11,R[41],E,E,8,[[[U]],[R[1]]]],[11,R[42],E,E,8,[[],[R[1]]]],[11,R[43],E,E,8,[[["self"]],[T]]],[11,R[45],E,E,8,[[["self"]],[T]]],[11,R[44],E,E,8,[[["self"]],[R[46]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[49],E,E,4,[[["self"]],[T]]],[11,R[50],E,E,4,[[[T],["self"]]]],[11,"into",E,E,4,[[],[U]]],[11,R[41],E,E,4,[[[U]],[R[1]]]],[11,R[42],E,E,4,[[],[R[1]]]],[11,R[43],E,E,4,[[["self"]],[T]]],[11,R[45],E,E,4,[[["self"]],[T]]],[11,R[44],E,E,4,[[["self"]],[R[46]]]],[11,"from",E,E,9,[[[T]],[T]]],[11,"into",E,E,9,[[],[U]]],[11,R[41],E,E,9,[[[U]],[R[1]]]],[11,R[42],E,E,9,[[],[R[1]]]],[11,R[43],E,E,9,[[["self"]],[T]]],[11,R[45],E,E,9,[[["self"]],[T]]],[11,R[44],E,E,9,[[["self"]],[R[46]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,"into",E,E,10,[[],[U]]],[11,R[41],E,E,10,[[[U]],[R[1]]]],[11,R[42],E,E,10,[[],[R[1]]]],[11,R[43],E,E,10,[[["self"]],[T]]],[11,R[45],E,E,10,[[["self"]],[T]]],[11,R[44],E,E,10,[[["self"]],[R[46]]]],[11,R[47],E,E,11,[[],["i"]]],[11,"from",E,E,11,[[[T]],[T]]],[11,"into",E,E,11,[[],[U]]],[11,R[41],E,E,11,[[[U]],[R[1]]]],[11,R[42],E,E,11,[[],[R[1]]]],[11,R[43],E,E,11,[[["self"]],[T]]],[11,R[45],E,E,11,[[["self"]],[T]]],[11,R[44],E,E,11,[[["self"]],[R[46]]]],[11,R[47],E,E,12,[[],["i"]]],[11,"from",E,E,12,[[[T]],[T]]],[11,"into",E,E,12,[[],[U]]],[11,R[41],E,E,12,[[[U]],[R[1]]]],[11,R[42],E,E,12,[[],[R[1]]]],[11,R[43],E,E,12,[[["self"]],[T]]],[11,R[45],E,E,12,[[["self"]],[T]]],[11,R[44],E,E,12,[[["self"]],[R[46]]]],[11,R[47],E,E,13,[[],["i"]]],[11,"from",E,E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[41],E,E,13,[[[U]],[R[1]]]],[11,R[42],E,E,13,[[],[R[1]]]],[11,R[43],E,E,13,[[["self"]],[T]]],[11,R[45],E,E,13,[[["self"]],[T]]],[11,R[44],E,E,13,[[["self"]],[R[46]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,"into",E,E,14,[[],[U]]],[11,R[41],E,E,14,[[[U]],[R[1]]]],[11,R[42],E,E,14,[[],[R[1]]]],[11,R[43],E,E,14,[[["self"]],[T]]],[11,R[45],E,E,14,[[["self"]],[T]]],[11,R[44],E,E,14,[[["self"]],[R[46]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,"into",E,E,15,[[],[U]]],[11,R[41],E,E,15,[[[U]],[R[1]]]],[11,R[42],E,E,15,[[],[R[1]]]],[11,R[43],E,E,15,[[["self"]],[T]]],[11,R[45],E,E,15,[[["self"]],[T]]],[11,R[44],E,E,15,[[["self"]],[R[46]]]],[11,"from",E,E,16,[[[T]],[T]]],[11,"into",E,E,16,[[],[U]]],[11,R[41],E,E,16,[[[U]],[R[1]]]],[11,R[42],E,E,16,[[],[R[1]]]],[11,R[43],E,E,16,[[["self"]],[T]]],[11,R[45],E,E,16,[[["self"]],[T]]],[11,R[44],E,E,16,[[["self"]],[R[46]]]],[11,R[48],E,E,17,[[["self"]],[R[5]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[41],E,E,17,[[[U]],[R[1]]]],[11,R[42],E,E,17,[[],[R[1]]]],[11,R[43],E,E,17,[[["self"]],[T]]],[11,R[45],E,E,17,[[["self"]],[T]]],[11,R[44],E,E,17,[[["self"]],[R[46]]]],[11,"from",E,E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[41],E,E,18,[[[U]],[R[1]]]],[11,R[42],E,E,18,[[],[R[1]]]],[11,R[43],E,E,18,[[["self"]],[T]]],[11,R[45],E,E,18,[[["self"]],[T]]],[11,R[44],E,E,18,[[["self"]],[R[46]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,"into",E,E,19,[[],[U]]],[11,R[41],E,E,19,[[[U]],[R[1]]]],[11,R[42],E,E,19,[[],[R[1]]]],[11,R[43],E,E,19,[[["self"]],[T]]],[11,R[45],E,E,19,[[["self"]],[T]]],[11,R[44],E,E,19,[[["self"]],[R[46]]]],[11,R[48],E,E,20,[[["self"]],[R[5]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,"into",E,E,20,[[],[U]]],[11,R[41],E,E,20,[[[U]],[R[1]]]],[11,R[42],E,E,20,[[],[R[1]]]],[11,R[43],E,E,20,[[["self"]],[T]]],[11,R[45],E,E,20,[[["self"]],[T]]],[11,R[44],E,E,20,[[["self"]],[R[46]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,"into",E,E,21,[[],[U]]],[11,R[41],E,E,21,[[[U]],[R[1]]]],[11,R[42],E,E,21,[[],[R[1]]]],[11,R[43],E,E,21,[[["self"]],[T]]],[11,R[45],E,E,21,[[["self"]],[T]]],[11,R[44],E,E,21,[[["self"]],[R[46]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,"into",E,E,22,[[],[U]]],[11,R[41],E,E,22,[[[U]],[R[1]]]],[11,R[42],E,E,22,[[],[R[1]]]],[11,R[43],E,E,22,[[["self"]],[T]]],[11,R[45],E,E,22,[[["self"]],[T]]],[11,R[44],E,E,22,[[["self"]],[R[46]]]],[11,"from",E,E,23,[[[T]],[T]]],[11,"into",E,E,23,[[],[U]]],[11,R[41],E,E,23,[[[U]],[R[1]]]],[11,R[42],E,E,23,[[],[R[1]]]],[11,R[43],E,E,23,[[["self"]],[T]]],[11,R[45],E,E,23,[[["self"]],[T]]],[11,R[44],E,E,23,[[["self"]],[R[46]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,"into",E,E,24,[[],[U]]],[11,R[41],E,E,24,[[[U]],[R[1]]]],[11,R[42],E,E,24,[[],[R[1]]]],[11,R[43],E,E,24,[[["self"]],[T]]],[11,R[45],E,E,24,[[["self"]],[T]]],[11,R[44],E,E,24,[[["self"]],[R[46]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,"into",E,E,25,[[],[U]]],[11,R[41],E,E,25,[[[U]],[R[1]]]],[11,R[42],E,E,25,[[],[R[1]]]],[11,R[43],E,E,25,[[["self"]],[T]]],[11,R[45],E,E,25,[[["self"]],[T]]],[11,R[44],E,E,25,[[["self"]],[R[46]]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[49],E,E,26,[[["self"]],[T]]],[11,R[50],E,E,26,[[[T],["self"]]]],[11,"into",E,E,26,[[],[U]]],[11,R[41],E,E,26,[[[U]],[R[1]]]],[11,R[42],E,E,26,[[],[R[1]]]],[11,R[43],E,E,26,[[["self"]],[T]]],[11,R[45],E,E,26,[[["self"]],[T]]],[11,R[44],E,E,26,[[["self"]],[R[46]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,"into",E,E,27,[[],[U]]],[11,R[41],E,E,27,[[[U]],[R[1]]]],[11,R[42],E,E,27,[[],[R[1]]]],[11,R[43],E,E,27,[[["self"]],[T]]],[11,R[45],E,E,27,[[["self"]],[T]]],[11,R[44],E,E,27,[[["self"]],[R[46]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[49],E,E,5,[[["self"]],[T]]],[11,R[50],E,E,5,[[[T],["self"]]]],[11,"into",E,E,5,[[],[U]]],[11,R[41],E,E,5,[[[U]],[R[1]]]],[11,R[42],E,E,5,[[],[R[1]]]],[11,R[43],E,E,5,[[["self"]],[T]]],[11,R[45],E,E,5,[[["self"]],[T]]],[11,R[44],E,E,5,[[["self"]],[R[46]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,"into",E,E,28,[[],[U]]],[11,R[41],E,E,28,[[[U]],[R[1]]]],[11,R[42],E,E,28,[[],[R[1]]]],[11,R[43],E,E,28,[[["self"]],[T]]],[11,R[45],E,E,28,[[["self"]],[T]]],[11,R[44],E,E,28,[[["self"]],[R[46]]]],[11,"fmt",E,E,17,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,20,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"hash",E,E,5,[[["self"],["__h"]]]],[11,"from",E,E,17,[[[R[64]]],[R[2]]]],[11,"from",E,"Converts a [`NulError`] into a [`io::Error`].",17,[[["nulerror"]],[R[2]]]],[11,"from",E,"Converts an [`ErrorKind`] into an [`Error`].",17,[[[R[55]]],[R[2]]]],[11,R[52],E,E,27,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,27,[[["self"],[R[3]]]]],[11,R[52],E,E,9,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,9,[[["self"],[R[3]]]]],[11,R[52],E,E,15,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,15,[[["self"],[R[3]]]]],[11,R[52],E,E,10,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,10,[[["self"],[R[3]]]]],[11,R[52],E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,26,[[["self"],[R[3]]]]],[11,R[52],E,E,28,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[53],E,E,28,[[["self"],[R[3]]]]],[11,"seek",E,E,26,[[["self"],[R[54]]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[30],E,E,26,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,R[32],E,E,26,[[["self"]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,"seek",E,"Seek to the offset, in bytes, in the underlying writer.",25,[[["self"],[R[54]]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,"seek",E,"Seek to an offset, in bytes, in the underlying reader.",28,[[["self"],[R[54]]],[[R[2]],[R[1],["u64",R[2]]],["u64"]]]],[11,"fmt",E,E,8,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,27,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,18,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,15,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,7,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,9,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,11,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,26,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,4,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,13,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,17,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,10,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,23,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,16,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,5,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,28,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,20,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,24,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,19,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,14,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,21,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,12,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,22,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,25,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"fmt",E,E,6,[[["self"],[R[51]]],[[R[2]],[R[1],[R[2]]]]]],[11,"cmp",E,E,5,[[["self"],[R[55]]],[R[57]]]],[11,"read",E,E,21,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,21,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,21,[[["self"]],[R[4]]]],[11,"read",E,E,10,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,10,[[["self"]],[R[4]]]],[11,R[15],E,E,10,[[["self"],["vec"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"read",E,E,27,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,27,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,27,[[["self"]],[R[4]]]],[11,"read",E,E,28,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,28,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,28,[[["self"]],[R[4]]]],[11,"read",E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[19],E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[4],E,E,26,[[["self"]],[R[4]]]],[11,"read",E,E,19,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,19,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,19,[[["self"]],[R[4]]]],[11,R[15],E,E,19,[[["self"],["vec"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[17],E,E,19,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[19],E,E,19,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"read",E,E,9,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[11],E,E,9,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,9,[[["self"]],[R[4]]]],[11,"read",E,E,15,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[4],E,E,15,[[["self"]],[R[4]]]],[11,"drop",E,E,25,[[["self"]]]],[11,"eq",E,E,5,[[["self"],[R[55]]],["bool"]]],[11,"eq",E,E,4,[[["self"],[R[54]]],["bool"]]],[11,"ne",E,E,4,[[["self"],[R[54]]],["bool"]]],[11,"deref",E,E,7,[[["self"]]]],[11,"deref",E,E,6,[[["self"]]]],[11,"next",E,E,11,[[["self"]],[[R[59],[R[1]]],[R[1],["u8",R[2]]]]]],[11,"next",E,E,13,[[["self"]],[[R[1],[R[5],R[2]]],[R[59],[R[1]]]]]],[11,"next",E,E,12,[[["self"]],[[R[59],[R[1]]],[R[1],["vec",R[2]]]]]],[11,"clone",E,E,4,[[["self"]],[R[54]]]],[11,"clone",E,E,5,[[["self"]],[R[55]]]],[11,"clone",E,E,26,[[["self"]],["cursor"]]],[11,"default",E,E,26,[[],["cursor"]]],[11,R[56],E,E,14,[[["self"]],["i32"]]],[11,R[56],E,E,27,[[["self"]],["i32"]]],[11,R[56],E,E,23,[[["self"]],["i32"]]],[11,R[56],E,E,16,[[["self"]],["i32"]]],[11,R[56],E,E,19,[[["self"]],["i32"]]],[11,R[56],E,E,24,[[["self"]],["i32"]]],[11,"write",E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,22,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,22,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,14,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,14,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,14,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[36],E,E,14,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[38],E,E,14,[[["self"],[R[40]]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,23,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,23,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,23,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,24,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,24,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,24,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[36],E,E,24,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,R[38],E,E,24,[[["self"],[R[40]]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,16,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,16,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,16,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,25,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,25,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,25,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,18,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,18,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,18,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"write",E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[34],E,E,26,[[["self"]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,"flush",E,E,26,[[["self"]],[[R[2]],[R[1],[R[2]]]]]],[11,"deref_mut",E,E,6,[[["self"]]]],[11,"partial_cmp",E,E,5,[[["self"],[R[55]]],[[R[57]],[R[59],[R[57]]]]]],[11,R[58],E,E,20,[[["self"]],["str"]]],[11,R[58],E,E,17,[[["self"]],["str"]]],[11,"cause",E,E,17,[[["self"]],[[R[59],[R[2]]],[R[2]]]]],[11,"source",E,E,17,[[["self"]],[[R[2]],[R[59],[R[2]]]]]],[11,"new",E,"Creates a new `IoSliceMut` wrapping a byte slice.",6,[[],["ioslicemut"]]],[11,"new",E,"Creates a new `IoSlice` wrapping a byte slice.",7,[[],["ioslice"]]],[11,"zeroing",E,"Returns a new `Initializer` which will zero out buffers.",8,[[],[R[4]]]],[11,"nop",E,"Returns a new `Initializer` which will not zero out buffers.",8,[[],[R[4]]]],[11,"should_initialize",E,"Indicates if a buffer should be initialized.",8,[[["self"]],["bool"]]],[11,"initialize",E,"Initializes a buffer if necessary.",8,[[["self"]]]],[11,R[60],E,"Consumes the `Chain`, returning the wrapped readers.",9,[[]]],[11,R[61],E,"Gets references to the underlying readers in this `Chain`.",9,[[["self"]]]],[11,R[62],E,"Gets mutable references to the underlying readers in this…",9,[[["self"]]]],[11,"limit",E,"Returns the number of bytes that can be read before this…",10,[[["self"]],["u64"]]],[11,"set_limit",E,"Sets the number of bytes that can be read before this…",10,[[["self"],["u64"]]]],[11,R[60],E,"Consumes the `Take`, returning the wrapped reader.",10,[[],[T]]],[11,R[61],E,R[70],10,[[["self"]],[T]]],[11,R[62],E,R[71],10,[[["self"]],[T]]],[11,"lock",E,"Locks this handle to the standard output stream, returning…",14,[[["self"]],["stdoutlock"]]],[11,"new",E,"Creates a new I/O error from a known kind of error as well…",17,[[[R[55]],["e"]],[R[2]]]],[11,"last_os_error",E,"Returns an error representing the last OS error which…",17,[[],[R[2]]]],[11,"from_raw_os_error",E,"Creates a new instance of an `Error` from a particular OS…",17,[[["i32"]],[R[2]]]],[11,"raw_os_error",E,"Returns the OS error that this error represents (if any).",17,[[["self"]],[["i32"],[R[59],["i32"]]]]],[11,R[61],E,"Returns a reference to the inner error wrapped by this…",17,[[["self"]],[[R[2]],[R[59],[R[2]]]]]],[11,R[62],E,"Returns a mutable reference to the inner error wrapped by…",17,[[["self"]],[[R[2]],[R[59],[R[2]]]]]],[11,R[60],E,"Consumes the `Error`, returning its inner error (if any).",17,[[],[[R[59],["box"]],["box",[R[2]]]]]],[11,"kind",E,"Returns the corresponding `ErrorKind` for this error.",17,[[["self"]],[R[55]]]],[11,"lock",E,"Locks this handle to the standard input stream, returning…",19,[[["self"]],["stdinlock"]]],[11,R[26],E,"Locks this handle and reads a line of input into the…",19,[[["self"],[R[5]]],[[R[2]],[R[1],[R[3],R[2]]],[R[3]]]]],[11,R[2],E,"Returns the error which caused the call to `into_inner()`…",20,[[["self"]],[R[2]]]],[11,R[60],E,"Returns the buffered writer instance which generated the…",20,[[],["w"]]],[11,"new",E,"Creates a new `LineWriter`.",22,[[["w"]],[R[63]]]],[11,R[65],E,"Creates a new `LineWriter` with a specified capacity for…",22,[[["w"],[R[3]]],[R[63]]]],[11,R[61],E,R[67],22,[[["self"]],["w"]]],[11,R[62],E,R[68],22,[[["self"]],["w"]]],[11,R[60],E,"Unwraps this `LineWriter`, returning the underlying writer.",22,[[],[[R[1],[R[64]]],[R[64],[R[63]]]]]],[11,"lock",E,"Locks this handle to the standard error stream, returning…",24,[[["self"]],["stderrlock"]]],[11,"new",E,"Creates a new `BufWriter` with a default buffer capacity.…",25,[[["w"]],[R[66]]]],[11,R[65],E,"Creates a new `BufWriter` with the specified buffer…",25,[[["w"],[R[3]]],[R[66]]]],[11,R[61],E,R[67],25,[[["self"]],["w"]]],[11,R[62],E,R[68],25,[[["self"]],["w"]]],[11,"buffer",E,R[72],25,[[["self"]]]],[11,R[60],E,"Unwraps this `BufWriter`, returning the underlying writer.",25,[[],[[R[1],[R[64]]],[R[64],[R[66]]]]]],[11,"new",E,"Creates a new cursor wrapping the provided underlying…",26,[[[T]],["cursor"]]],[11,R[60],E,"Consumes this cursor, returning the underlying value.",26,[[],[T]]],[11,R[61],E,"Gets a reference to the underlying value in this cursor.",26,[[["self"]],[T]]],[11,R[62],E,"Gets a mutable reference to the underlying value in this…",26,[[["self"]],[T]]],[11,"position",E,"Returns the current position of this cursor.",26,[[["self"]],["u64"]]],[11,"set_position",E,"Sets the position of this cursor.",26,[[["self"],["u64"]]]],[11,"new",E,"Creates a new `BufReader` with a default buffer capacity.…",28,[[["r"]],[R[69]]]],[11,R[65],E,"Creates a new `BufReader` with the specified buffer…",28,[[[R[3]],["r"]],[R[69]]]],[11,R[61],E,R[70],28,[[["self"]],["r"]]],[11,R[62],E,R[71],28,[[["self"]],["r"]]],[11,"buffer",E,R[72],28,[[["self"]]]],[11,R[60],E,"Unwraps this `BufReader`, returning the underlying reader.",28,[[],["r"]]],[11,"seek_relative",E,"Seeks relative to the current position. If the new…",28,[[["self"],["i64"]],[[R[2]],[R[1],[R[2]]]]]]],"p":[[8,"Read"],[8,"BufRead"],[8,"Seek"],[8,"Write"],[4,R[73]],[4,R[74]],[3,R[75]],[3,"IoSlice"],[3,R[76]],[3,"Chain"],[3,"Take"],[3,"Bytes"],[3,"Split"],[3,"Lines"],[3,"Stdout"],[3,"Empty"],[3,R[77]],[3,"Error"],[3,"Sink"],[3,"Stdin"],[3,R[78]],[3,"Repeat"],[3,R[79]],[3,R[80]],[3,"Stderr"],[3,R[81]],[3,"Cursor"],[3,R[82]],[3,R[83]]]};
searchIndex["xmodem"]={"doc":E,"i":[[3,"Xmodem","xmodem","Implementation of the XMODEM protocol.",N,N],[4,R[89],E,"Enum representing how much progress has been made…",N,N],[13,"Waiting",E,"Waiting for receiver to send NAK.",0,N],[13,"Started",E,"Download/upload has started.",0,N],[13,"Packet",E,"Packet `.0` was transmitted/received.",0,N],[13,"NAK",E,E,0,N],[13,"Unknown",E,E,0,N],[6,"ProgressFn",E,"Type for progress callbacks.",N,N],[11,"transmit",E,R[84],1,[[["w"],["r"]],[[R[3]],[R[1],[R[3]]]]]],[11,"transmit_with_progress",E,R[84],1,[[["w"],[R[86]],["r"]],[[R[3]],[R[1],[R[3]]]]]],[11,"receive",E,R[85],1,[[["w"],["r"]],[[R[3]],[R[1],[R[3]]]]]],[11,"receive_with_progress",E,R[85],1,[[["w"],[R[86]],["r"]],[[R[3]],[R[1],[R[3]]]]]],[11,"new",E,R[87],1,[[[T]],["self"]]],[11,"new_with_progress",E,R[87],1,[[[R[86]],[T]],["self"]]],[11,"read_packet",E,"Reads (downloads) a single packet from the inner stream…",1,[[["self"]],[[R[3]],[R[1],[R[3]]]]]],[11,"write_packet",E,"Sends (uploads) a single packet to the inner stream using…",1,[[["self"]],[[R[3]],[R[1],[R[3]]]]]],[11,"flush",E,R[88],1,[[["self"]],[R[1]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[41],E,E,1,[[[U]],[R[1]]]],[11,R[42],E,E,1,[[],[R[1]]]],[11,R[43],E,E,1,[[["self"]],[T]]],[11,R[45],E,E,1,[[["self"]],[T]]],[11,R[44],E,E,1,[[["self"]],[R[46]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[49],E,E,0,[[["self"]],[T]]],[11,R[50],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[41],E,E,0,[[[U]],[R[1]]]],[11,R[42],E,E,0,[[],[R[1]]]],[11,R[43],E,E,0,[[["self"]],[T]]],[11,R[45],E,E,0,[[["self"]],[T]]],[11,R[44],E,E,0,[[["self"]],[R[46]]]],[11,"clone",E,E,0,[[["self"]],["progress"]]],[11,"fmt",E,E,0,[[["self"],[R[51]]],[R[1]]]]],"p":[[4,R[89]],[3,"Xmodem"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);